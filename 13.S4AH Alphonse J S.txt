//ROLL NO:13 S4AH                   :Alphonse J S	              -Batch 1
//SJF SCHEDULING	            :Operatin Systems Lab             -28-Jan-2025

#include<stdio.h>
int main()
{
int at[10],bt[10],pr[10];
int n, i, j, temp, time=0, count, over=0, sum_wait=0,
sum_turnaround=0, start;
float avgwait, avgturn;
printf("Enter the number of processes\n");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("Enter the arrival time and execution time for process %d\n",i+1);
scanf("%d%d",&at[i],&bt[i]);
pr[i]=i+1;
}

for(i=0;i<n-1;i++)
{
for(j=i+1;j<n;j++)
{
if(at[i]>at[j])
{
temp=at[i];
at[i]=at[j];
at[j]=temp;

temp=bt[i];
bt[i]=bt[j];
bt[j]=temp;

temp=pr[i];
pr[i]=pr[j];
pr[j]=temp;
}
}
}
printf("\n\nProcess\t|Arrival time\t|Execution time\t|Start time\t|
End time\t|waiting time\t|Turnaround time\n\n");
while(over<n)
{
count=0;

for(i=over;i<n;i++)
{
if(at[i]<=time)
count++;
else
break;
}
if(count>1)
{
for(i=over;i<over+count-1;i++)
{
for(j=i+1;j<over+count;j++)
{
if(bt[i]>bt[j])
{
temp=at[i];
at[i]=at[j];
at[j]=temp;
temp=bt[i];
bt[i]=bt[j];
bt[j]=temp;
temp=pr[i];
pr[i]=pr[j];
pr[j]=temp;
}

}
}
}
start=time;
time+=bt[over];
printf("P[%d]\t|\t%d\t|\t%d\t|\t%d\t|\t%d\t|\t%d\t|\t%d\n",pr[over], 
at[over],bt[over],start,time,time-at[over]-bt[over],time-at[over]);
sum_wait+=time-at[over]-bt[over];
sum_turnaround+=time-at[over];
over++;
}
avgwait=(float)sum_wait/(float)n;
avgturn=(float)sum_turnaround/(float)n;
printf("Average waiting time is %f\n",avgwait);
printf("Average turnaround time is %f\n",avgturn);
return 0;
}





//ROLL NO:13 S4AH                   :Alphonse J S	           -Batch 1
//IPC USING SHARED MEMORY           :Operatin Systems Lab         -28-Jan-2025

#include<stdio.h>
#include<sys/ipc.h>
#include<sys/shm.h>
#include<sys/types.h>
#include<string.h>
void main()
{
 int shmid=shmget(65,1024,0666|IPC_CREAT);
 char*str1=(char*)shmat(shmid,NULL,0);
 printf("Write Data:\n");
 fgets(str1,1024,stdin);
 printf("\nData written in memory:%s\n",str1);
 shmdt(str1);
}





#include<stdio.h>
#include<sys/ipc.h>
#include<sys/shm.h>

void main()
{
 int shmid=shmget(65,1024,0666);
 char*str=(char*)shmat(shmid,NULL,0);
 printf("Data read from memory:%s\n",str);
 shmdt(str);
 shmctl(shmid,IPC_RMID,NULL);
 }



...............
















